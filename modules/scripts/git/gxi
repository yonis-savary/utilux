#!/bin/sh

echo "Git repo status : "
git status --short | grep -v -E "^ +\?.+$"
git log --branches --not --remotes --decorate=short --pretty=format:'%D' | sed 's/^HEAD -> //g' | sort -u
echo ""

echo "⚠️  Warning ! This command will perform a git reset --hard ON EVERY BRANCHES, you will lose any un-pushed work !"

printf "Continue ? [y/N] "
read reply
case "$(printf "%s" "$reply" | cut -c1)" in
    [Yy]) ;;
    *) echo "Aborted."; exit 1 ;;
esac

echo
echo "📥 Retrieving missing work (1/2)..."
gxf

echo
echo "🧹 Cleaning up your repo..."
gxc main
git clean -fd
gxpm


echo
echo "🔁 Syncing remote branch with local..."
git for-each-ref --format='%(refname:short)' refs/heads | while read branch ; do
    if [ "$branch" = "main" ]; then
        continue
    fi

    if git show-ref --verify --quiet "refs/remotes/origin/$branch"; then
        git branch --set-upstream-to="origin/$branch" "$branch" 2>&1 >/dev/null \
         && echo "🔗 Bound ${branch} to origin/${branch}" \
         || echo "⚠️ Could not bind ${branch} to origin/${branch}"
    else
        echo "⚠️  No remote : ${branch}"
    fi

done

echo
echo "📥 Retrieving missing work (2/2)..."
original_branch=$(gxb)
git for-each-ref --format='%(refname:short)' refs/heads | while read branch ; do
    git checkout "$branch" >/dev/null
    git reset --hard "origin/$branch" && echo "Branch synced successfuly"
done
git checkout "$original_branch"

echo
echo "✅ Your repo is now ready to work with !"